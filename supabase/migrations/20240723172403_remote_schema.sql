
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pg_net" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

COMMENT ON SCHEMA "public" IS 'standard public schema';

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

CREATE TYPE "public"."paymenticons" AS ENUM (
    'PhoneIcon',
    'BanknotesIcon',
    'CrediCardIcon',
    'TruckIcon'
);

ALTER TYPE "public"."paymenticons" OWNER TO "postgres";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE IF NOT EXISTS "public"."gift_translations" (
    "id" bigint NOT NULL,
    "language" "text" NOT NULL,
    "title" "text" NOT NULL,
    "description" "text" DEFAULT ''::"text" NOT NULL,
    "gift" bigint NOT NULL
);

ALTER TABLE "public"."gift_translations" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."gifts" (
    "id" bigint NOT NULL,
    "price" real NOT NULL,
    "parts" integer DEFAULT 0 NOT NULL,
    "image" "text" DEFAULT ''::"text" NOT NULL,
    "hidden" boolean DEFAULT false NOT NULL
);

ALTER TABLE "public"."gifts" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."transactions" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "amount" real NOT NULL,
    "gift" bigint NOT NULL,
    "donor" bigint NOT NULL
);

ALTER TABLE "public"."transactions" OWNER TO "postgres";

CREATE OR REPLACE VIEW "public"."all_gifts" AS
 SELECT "gifts"."id",
    "gifts"."price",
    "gifts"."parts",
    "gifts"."image",
    "gift_translations"."title",
    "gift_translations"."description",
    "gift_translations"."language",
    "sum"("transactions"."amount") AS "amount_gifted"
   FROM (("public"."gifts"
     LEFT JOIN "public"."gift_translations" ON (("gifts"."id" = "gift_translations"."gift")))
     LEFT JOIN "public"."transactions" ON (("gifts"."id" = "transactions"."gift")))
  GROUP BY "gifts"."id", "gifts"."price", "gifts"."parts", "gifts"."image", "gift_translations"."title", "gift_translations"."description", "gift_translations"."language";

ALTER TABLE "public"."all_gifts" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."donors" (
    "id" bigint NOT NULL,
    "name" "text" NOT NULL,
    "surname" "text" NOT NULL,
    "address" "text" DEFAULT ''::"text" NOT NULL,
    "email" "text" DEFAULT ''::"text" NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "message" "text"
);

ALTER TABLE "public"."donors" OWNER TO "postgres";

ALTER TABLE "public"."donors" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."donors_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE "public"."gift_translations" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."gift_translations_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE "public"."gifts" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."gifts_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE OR REPLACE VIEW "public"."gifts_visible" AS
 SELECT "gifts"."id",
    "gifts"."price",
    "gifts"."parts",
    "gifts"."image",
    "gift_translations"."title",
    "gift_translations"."description",
    "gift_translations"."language",
    "sum"("transactions"."amount") AS "amount_gifted"
   FROM (("public"."gifts"
     JOIN "public"."gift_translations" ON (("gifts"."id" = "gift_translations"."gift")))
     LEFT JOIN "public"."transactions" ON (("gifts"."id" = "transactions"."gift")))
  WHERE ("gifts"."hidden" = false)
  GROUP BY "gifts"."id", "gifts"."price", "gifts"."parts", "gifts"."image", "gift_translations"."title", "gift_translations"."description", "gift_translations"."language";

ALTER TABLE "public"."gifts_visible" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."payment_methods" (
    "id" bigint NOT NULL,
    "title" "text" NOT NULL,
    "image" "text" NOT NULL,
    "info" "text"[] NOT NULL,
    "info_icon" "public"."paymenticons"
);

ALTER TABLE "public"."payment_methods" OWNER TO "postgres";

ALTER TABLE "public"."payment_methods" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."payment_methods_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."settings" (
    "id" bigint NOT NULL,
    "key" "text" NOT NULL,
    "value" "text" NOT NULL
);

ALTER TABLE "public"."settings" OWNER TO "postgres";

ALTER TABLE "public"."settings" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."settings_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE "public"."transactions" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."transactions_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."donors"
    ADD CONSTRAINT "donors_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."gift_translations"
    ADD CONSTRAINT "gift_translations_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."gifts"
    ADD CONSTRAINT "gifts_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."payment_methods"
    ADD CONSTRAINT "payment_methods_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."settings"
    ADD CONSTRAINT "settings_key_key" UNIQUE ("key");

ALTER TABLE ONLY "public"."settings"
    ADD CONSTRAINT "settings_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."transactions"
    ADD CONSTRAINT "transactions_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."gift_translations"
    ADD CONSTRAINT "gift_translations_gift_fkey" FOREIGN KEY ("gift") REFERENCES "public"."gifts"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."transactions"
    ADD CONSTRAINT "transactions_donor_fkey" FOREIGN KEY ("donor") REFERENCES "public"."donors"("id") ON UPDATE CASCADE;

ALTER TABLE ONLY "public"."transactions"
    ADD CONSTRAINT "transactions_gift_fkey" FOREIGN KEY ("gift") REFERENCES "public"."gifts"("id") ON UPDATE CASCADE;

CREATE POLICY "Enable insert for all users" ON "public"."donors" FOR INSERT TO "anon" WITH CHECK (true);

CREATE POLICY "Enable insert for recently created donors TTL" ON "public"."transactions" FOR INSERT TO "anon" WITH CHECK ((EXISTS ( SELECT "donors"."id" AS "created_at"
   FROM "public"."donors"
  WHERE (("donors"."id" = "transactions"."donor") AND ("donors"."created_at" > (CURRENT_TIMESTAMP - '00:01:00'::interval))))));

CREATE POLICY "Enable read access for all users" ON "public"."gift_translations" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."gifts" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."payment_methods" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."settings" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."transactions" FOR SELECT USING (true);

CREATE POLICY "TEMP dev permissions" ON "public"."gift_translations" USING (true);

CREATE POLICY "TEMP dev permissions" ON "public"."gifts" USING (true);

CREATE POLICY "TTL 1 min - select" ON "public"."donors" FOR SELECT TO "anon" USING (("created_at" > (CURRENT_TIMESTAMP - '00:01:00'::interval)));

ALTER TABLE "public"."donors" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."gift_translations" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."gifts" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."payment_methods" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."settings" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."transactions" ENABLE ROW LEVEL SECURITY;

ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";

GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON TABLE "public"."gift_translations" TO "anon";
GRANT ALL ON TABLE "public"."gift_translations" TO "authenticated";
GRANT ALL ON TABLE "public"."gift_translations" TO "service_role";

GRANT ALL ON TABLE "public"."gifts" TO "anon";
GRANT ALL ON TABLE "public"."gifts" TO "authenticated";
GRANT ALL ON TABLE "public"."gifts" TO "service_role";

GRANT ALL ON TABLE "public"."transactions" TO "anon";
GRANT ALL ON TABLE "public"."transactions" TO "authenticated";
GRANT ALL ON TABLE "public"."transactions" TO "service_role";

GRANT ALL ON TABLE "public"."all_gifts" TO "anon";
GRANT ALL ON TABLE "public"."all_gifts" TO "authenticated";
GRANT ALL ON TABLE "public"."all_gifts" TO "service_role";

GRANT ALL ON TABLE "public"."donors" TO "anon";
GRANT ALL ON TABLE "public"."donors" TO "authenticated";
GRANT ALL ON TABLE "public"."donors" TO "service_role";

GRANT ALL ON SEQUENCE "public"."donors_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."donors_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."donors_id_seq" TO "service_role";

GRANT ALL ON SEQUENCE "public"."gift_translations_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."gift_translations_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."gift_translations_id_seq" TO "service_role";

GRANT ALL ON SEQUENCE "public"."gifts_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."gifts_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."gifts_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."gifts_visible" TO "anon";
GRANT ALL ON TABLE "public"."gifts_visible" TO "authenticated";
GRANT ALL ON TABLE "public"."gifts_visible" TO "service_role";

GRANT ALL ON TABLE "public"."payment_methods" TO "anon";
GRANT ALL ON TABLE "public"."payment_methods" TO "authenticated";
GRANT ALL ON TABLE "public"."payment_methods" TO "service_role";

GRANT ALL ON SEQUENCE "public"."payment_methods_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."payment_methods_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."payment_methods_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."settings" TO "anon";
GRANT ALL ON TABLE "public"."settings" TO "authenticated";
GRANT ALL ON TABLE "public"."settings" TO "service_role";

GRANT ALL ON SEQUENCE "public"."settings_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."settings_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."settings_id_seq" TO "service_role";

GRANT ALL ON SEQUENCE "public"."transactions_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."transactions_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."transactions_id_seq" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;

--
-- Dumped schema changes for auth and storage
--

CREATE POLICY "Upload and download access to authenticated users 1ffg0oo_0" ON "storage"."objects" FOR SELECT USING ((("bucket_id" = 'images'::"text") AND (("storage"."extension"("name") = 'jpg'::"text") OR ("storage"."extension"("name") = 'jpeg'::"text") OR ("storage"."extension"("name") = 'png'::"text") OR ("storage"."extension"("name") = 'gif'::"text") OR ("storage"."extension"("name") = 'webp'::"text")) AND ("lower"(("storage"."foldername"("name"))[1]) = 'public'::"text")));

CREATE POLICY "Upload and download access to authenticated users 1ffg0oo_1" ON "storage"."objects" FOR INSERT WITH CHECK ((("bucket_id" = 'images'::"text") AND (("storage"."extension"("name") = 'jpg'::"text") OR ("storage"."extension"("name") = 'jpeg'::"text") OR ("storage"."extension"("name") = 'png'::"text") OR ("storage"."extension"("name") = 'gif'::"text") OR ("storage"."extension"("name") = 'webp'::"text")) AND ("lower"(("storage"."foldername"("name"))[1]) = 'public'::"text")));

GRANT ALL ON TABLE "storage"."s3_multipart_uploads" TO "postgres";
GRANT ALL ON TABLE "storage"."s3_multipart_uploads_parts" TO "postgres";
